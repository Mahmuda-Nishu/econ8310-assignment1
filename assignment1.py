# -*- coding: utf-8 -*-
"""assignment1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QYYxbXNOsg4w6gFnfd7c55U685kN1VTb
"""

import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.tsa.api import ExponentialSmoothing
import pickle

# Load datasets
train_url = "https://raw.githubusercontent.com/dustywhite7/econ8310-assignment1/main/assignment_data_train.csv"
test_url = "https://raw.githubusercontent.com/dustywhite7/econ8310-assignment1/main/assignment_data_test.csv"

# Read the data with correct column names
train_data = pd.read_csv(train_url, parse_dates=['Timestamp'], index_col='Timestamp')
test_data = pd.read_csv(test_url, parse_dates=['Timestamp'], index_col='Timestamp')

# Ensure the data is sorted by timestamp
train_data = train_data.sort_index()
test_data = test_data.sort_index()

# ==============================
# ðŸ“Œ Enhanced Training Data Plot
# ==============================
plt.figure(figsize=(14, 6))
plt.plot(train_data['trips'], label='Taxi Trips', color='royalblue', linewidth=1.5, alpha=0.85)

# Title and labels with improved formatting
plt.title('NYC Hourly Taxi Trip Requests (Training Data)', fontsize=16, fontweight='bold')
plt.xlabel('Time', fontsize=12)
plt.ylabel('Number of Trips', fontsize=12)

# Formatting x-axis for better readability
plt.xticks(rotation=45)
plt.grid(True, linestyle='--', alpha=0.6)

# Adding a legend
plt.legend(fontsize=12, loc='upper right')

# Display plot
plt.show()

# ========================================
# ðŸ“Œ Fit Holt-Winters (Triple Exp. Smoothing)
# ========================================
print("ðŸ”„ Training Holt-Winters Model...")

model = ExponentialSmoothing(
    train_data['trips'],
    trend="add",
    seasonal="add",
    seasonal_periods=24  # 24-hour seasonal pattern (hourly data)
)

# Fit the model (Suppress convergence warnings)
modelFit = model.fit()

print("âœ… Model training complete!")

# ===========================================
# ðŸ“Œ Generate predictions for 744 test hours
# ===========================================
print("ðŸ“ˆ Generating predictions for test data...")

pred = modelFit.forecast(steps=744)

# Convert predictions into a DataFrame
pred_df = pd.DataFrame(pred, columns=['Predicted_Trips'])

# Save model for future use
with open("holt_winters_model.pkl", "wb") as file:
    pickle.dump(modelFit, file)

# Save predictions to CSV
pred_df.to_csv("taxi_trip_predictions.csv", index=True)

print("âœ… Predictions saved as 'taxi_trip_predictions.csv'")